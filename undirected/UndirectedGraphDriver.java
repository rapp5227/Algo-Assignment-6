/**
 * This is the Driver class for your UndirectedGraph class.  This file is solely for testing on your end and 
 * only contains two test cases.  You still need to test your method thoroughly and create more test cases to ensure
 * your code is working properly.
 */
public class UndirectedGraphDriver {

    /**
     * This method creates a test graph similar to the one that was used in the DirectedGraphDriver.java file
     * Provides another example of a graph
     * @param numNodes - the number of nodes that graph will contain
     * @return
     */
    public static UndirectedGraph createTestGraph(int numNodes) {
        boolean[][] matrix = new boolean[numNodes][numNodes];

        for(int i = 0; i < numNodes; i++ ){
            if( (2*i + 1) < numNodes ){
                matrix[i][2*i + 1] = true;
            }
            //if the right child is present, add it
            if( (2*i + 2) < numNodes ){
                matrix[i][2*i + 2] = true;

            }
        }

        UndirectedGraph graph = new UndirectedGraph(matrix);

        return graph;
    }

    /**
     * This method creates the example graph from question 2 on the assignment
     * Instead of Nodes S, B, E, F, T this method creates Nodes 1, 2, 3, 4, 5 with the same adjacencies
     * @return
     */
    public static UndirectedGraph createGraphFromExample() {
        boolean[][] matrix = new boolean[5][5];
        for (int i = 0; i < 5; i++) {
            for (int j = 0; j < 5; j++) {
               matrix[i][j] = false;
            }
        }
        matrix[0][1] = true;
        matrix[0][2] = true;
        matrix[1][0] = true;
        matrix[1][3] = true;
        matrix[2][0] = true;
        matrix[2][3] = true;
        matrix[2][3] = true;
        matrix[3][1] = true;
        matrix[3][2] = true;
        matrix[3][4] = true;
        matrix[4][3] = true;
        UndirectedGraph graph = new UndirectedGraph(matrix);

        return graph;
    }

    public static void main(String[] args){
        //this should return a print statement of the toString of the graph generated by createGraphFromExample()
        UndirectedGraph graph = UndirectedGraphDriver.createGraphFromExample();
        System.out.println(graph.toString());
        //this should return a print statement of the toString of the graph generated by createTestGraph()
        UndirectedGraph graph2 = UndirectedGraphDriver.createTestGraph(6);
        System.out.println(graph2.toString());
    }

}